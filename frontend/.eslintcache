[{"D:\\React Project\\Ahmad\\website\\premafirm\\frontend\\src\\index.js":"1","D:\\React Project\\Ahmad\\website\\premafirm\\frontend\\src\\App.js":"2","D:\\React Project\\Ahmad\\website\\premafirm\\frontend\\src\\pages\\HomePage\\index.js":"3","D:\\React Project\\Ahmad\\website\\premafirm\\frontend\\src\\components\\Footer\\index.js":"4","D:\\React Project\\Ahmad\\website\\premafirm\\frontend\\src\\components\\Header\\index.js":"5","D:\\React Project\\Ahmad\\website\\premafirm\\frontend\\src\\pages\\VendorPage\\index.js":"6","D:\\React Project\\Ahmad\\website\\premafirm\\frontend\\src\\pages\\V_Reg\\index.js":"7","D:\\React Project\\Ahmad\\website\\premafirm\\frontend\\src\\utils\\vendorRegFormData.js":"8","D:\\React Project\\Ahmad\\website\\premafirm\\frontend\\src\\utils\\vendorPageData.js":"9","D:\\React Project\\Ahmad\\website\\premafirm\\frontend\\src\\pages\\ThankyouPage\\index.js":"10","D:\\React Project\\Ahmad\\website\\premafirm\\frontend\\src\\pages\\LoginPage\\index.js":"11"},{"size":381,"mtime":1606878132620,"results":"12","hashOfConfig":"13"},{"size":1090,"mtime":1607972230701,"results":"14","hashOfConfig":"13"},{"size":518,"mtime":1607628410503,"results":"15","hashOfConfig":"13"},{"size":3821,"mtime":1607017525164,"results":"16","hashOfConfig":"13"},{"size":2426,"mtime":1607968774208,"results":"17","hashOfConfig":"13"},{"size":9622,"mtime":1607939024979,"results":"18","hashOfConfig":"13"},{"size":16011,"mtime":1608002583524,"results":"19","hashOfConfig":"13"},{"size":20475,"mtime":1607939162530,"results":"20","hashOfConfig":"13"},{"size":1413,"mtime":1607938965167,"results":"21","hashOfConfig":"13"},{"size":349,"mtime":1607969260166,"results":"22","hashOfConfig":"13"},{"size":1952,"mtime":1608000218849,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"2v951s",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\React Project\\Ahmad\\website\\premafirm\\frontend\\src\\index.js",[],["49","50"],"D:\\React Project\\Ahmad\\website\\premafirm\\frontend\\src\\App.js",[],"D:\\React Project\\Ahmad\\website\\premafirm\\frontend\\src\\pages\\HomePage\\index.js",[],"D:\\React Project\\Ahmad\\website\\premafirm\\frontend\\src\\components\\Footer\\index.js",[],"D:\\React Project\\Ahmad\\website\\premafirm\\frontend\\src\\components\\Header\\index.js",["51","52","53","54"],"D:\\React Project\\Ahmad\\website\\premafirm\\frontend\\src\\pages\\VendorPage\\index.js",["55"],"import React from \"react\";\r\nimport { brands, keyBenefits } from \"../../utils/vendorPageData\";\r\nimport \"./index.css\";\r\n\r\nfunction Vendor() {\r\n  return (\r\n    <div className=\"vendor-section\">\r\n      <div className=\"banner\" style={{ backgroundImage: \"url(/images/banner.png)\" }}>\r\n        <div className=\"features\">\r\n          <h1>Dropshipping Features</h1>\r\n          <p>\r\n            Worldwide suppliers, vendors, and brands use Modalyst to connect with online retailers and increase their\r\n            distribution into specialty stores around the world. Become a Modalyst supplier and see how fast your and\r\n            grows.\r\n          </p>\r\n          <button type=\"button\" className=\"btn btn-white\">\r\n            Learn More\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"container step-section\">\r\n        <h2 className=\"pt-5 mb-5 text-center\">What is Lorem Ipsum?</h2>\r\n        <div className=\"d-flex justify-content-center video-row\">\r\n          <p>\r\n            Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the\r\n            industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and\r\n            scrambled it to make a type specimen book. It has survived not only\r\n          </p>\r\n          <div className=\"embed-responsive embed-responsive-16by9\">\r\n            <iframe allowFullScreen=\"\" frameBorder=\"0\" src=\"https://www.youtube.com/embed/zzwRbKI2pn4\"></iframe>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"vendor_signup_steps text-center mb-5\">\r\n          <div className=\"container\">\r\n            <h2 className=\"pt-5 mb-5 text-center\">Start earning in 3 simple steps</h2>\r\n            <div className=\"row\">\r\n              <div className=\"col-4\">\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"1em\"\r\n                  height=\"1em\"\r\n                  viewBox=\"0 0 16 16\"\r\n                  fill=\"currentColor\"\r\n                  className=\"bi bi-cloud-upload\"\r\n                  style={{ fontSize: \"40px\", marginBottom: \"10px\" }}\r\n                >\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    d=\"M4.406 1.342A5.53 5.53 0 0 1 8 0c2.69 0 4.923 2 5.166 4.579C14.758 4.804 16 6.137 16 7.773 16 9.569 14.502 11 12.687 11H10a.5.5 0 0 1 0-1h2.688C13.979 10 15 8.988 15 7.773c0-1.216-1.02-2.228-2.313-2.228h-.5v-.5C12.188 2.825 10.328 1 8 1a4.53 4.53 0 0 0-2.941 1.1c-.757.652-1.153 1.438-1.153 2.055v.448l-.445.049C2.064 4.805 1 5.952 1 7.318 1 8.785 2.23 10 3.781 10H6a.5.5 0 0 1 0 1H3.781C1.708 11 0 9.366 0 7.318c0-1.763 1.266-3.223 2.942-3.593.143-.863.698-1.723 1.464-2.383z\"\r\n                  ></path>\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    d=\"M7.646 4.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1-.708.708L8.5 5.707V14.5a.5.5 0 0 1-1 0V5.707L5.354 7.854a.5.5 0 1 1-.708-.708l3-3z\"\r\n                  ></path>\r\n                </svg>\r\n                <h4>Upload products</h4>\r\n                <p>\r\n                  It is a long established fact that a reader will be distracted by the readable content of a page when\r\n                  looking at its layout.\r\n                </p>\r\n              </div>\r\n              <div className=\"col-4\">\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"1em\"\r\n                  height=\"1em\"\r\n                  viewBox=\"0 0 16 16\"\r\n                  fill=\"currentColor\"\r\n                  className=\"bi bi-shop-window\"\r\n                  style={{ fontSize: \"40px\", marginBottom: \"10px\" }}\r\n                >\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    d=\"M2.97 1.35A1 1 0 0 1 3.73 1h8.54a1 1 0 0 1 .76.35l2.609 3.044A1.5 1.5 0 0 1 16 5.37v.255a2.375 2.375 0 0 1-4.25 1.458A2.371 2.371 0 0 1 9.875 8 2.37 2.37 0 0 1 8 7.083 2.37 2.37 0 0 1 6.125 8a2.37 2.37 0 0 1-1.875-.917A2.375 2.375 0 0 1 0 5.625V5.37a1.5 1.5 0 0 1 .361-.976l2.61-3.045zm1.78 4.275a1.375 1.375 0 0 0 2.75 0 .5.5 0 0 1 1 0 1.375 1.375 0 0 0 2.75 0 .5.5 0 0 1 1 0 1.375 1.375 0 1 0 2.75 0V5.37a.5.5 0 0 0-.12-.325L12.27 2H3.73L1.12 5.045A.5.5 0 0 0 1 5.37v.255a1.375 1.375 0 0 0 2.75 0 .5.5 0 0 1 1 0zM1.5 8.5A.5.5 0 0 1 2 9v6h12V9a.5.5 0 0 1 1 0v6h.5a.5.5 0 0 1 0 1H.5a.5.5 0 0 1 0-1H1V9a.5.5 0 0 1 .5-.5zm2 .5a.5.5 0 0 1 .5.5V13h8V9.5a.5.5 0 0 1 1 0V13a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V9.5a.5.5 0 0 1 .5-.5z\"\r\n                  ></path>\r\n                </svg>\r\n                <h4>Publish products</h4>\r\n                <p>\r\n                  It is a long established fact that a reader will be distracted by the readable content of a page when\r\n                  looking at its layout.\r\n                </p>\r\n              </div>\r\n              <div className=\"col-4\">\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"1em\"\r\n                  height=\"1em\"\r\n                  viewBox=\"0 0 16 16\"\r\n                  fill=\"currentColor\"\r\n                  className=\"bi bi-cloud-upload\"\r\n                  style={{ fontSize: \"40px\", marginBottom: \"10px\" }}\r\n                >\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    d=\"M4.406 1.342A5.53 5.53 0 0 1 8 0c2.69 0 4.923 2 5.166 4.579C14.758 4.804 16 6.137 16 7.773 16 9.569 14.502 11 12.687 11H10a.5.5 0 0 1 0-1h2.688C13.979 10 15 8.988 15 7.773c0-1.216-1.02-2.228-2.313-2.228h-.5v-.5C12.188 2.825 10.328 1 8 1a4.53 4.53 0 0 0-2.941 1.1c-.757.652-1.153 1.438-1.153 2.055v.448l-.445.049C2.064 4.805 1 5.952 1 7.318 1 8.785 2.23 10 3.781 10H6a.5.5 0 0 1 0 1H3.781C1.708 11 0 9.366 0 7.318c0-1.763 1.266-3.223 2.942-3.593.143-.863.698-1.723 1.464-2.383z\"\r\n                  ></path>\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    d=\"M7.646 4.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1-.708.708L8.5 5.707V14.5a.5.5 0 0 1-1 0V5.707L5.354 7.854a.5.5 0 1 1-.708-.708l3-3z\"\r\n                  ></path>\r\n                </svg>\r\n                <h4>Fulfill orders</h4>\r\n                <p>\r\n                  It is a long established fact that a reader will be distracted by the readable content of a page when\r\n                  looking at its layout.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"keyBenefits-section\">\r\n          <div className=\"container\">\r\n            <div className=\"intro m-n1\">\r\n              <h2 className=\"mb-4\">Key Benefits</h2>\r\n              <p>\r\n                Nunc luctus in metus eget fringilla. Aliquam sed justo ligula. Vestibulum nibh erat, pellentesque ut\r\n                laoreet vitae.\r\n              </p>\r\n            </div>\r\n            <div className=\"row\">\r\n              {keyBenefits.map((keyBenefit) => {\r\n                return (\r\n                  <div className=\"col-lg-6\" key={keyBenefit.id}>\r\n                    <div className=\"d-flex align-items-start p-5\">\r\n                      <div className=\"item-pic\">\r\n                        <a href={keyBenefit.link}>\r\n                          <img className=\"img-fluid\" src={keyBenefit.image} alt={`benefit${keyBenefit.id}`} />\r\n                        </a>\r\n                      </div>\r\n                      <div className=\"pl-4\">\r\n                        <h4>Project Name</h4>\r\n                        <p>\r\n                          Aenean tortor est, vulputate quis leo in, vehicula rhoncus lacus. Praesent aliquam in tellus\r\n                          eu gravida.\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"highlight-section\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-8\">\r\n                <h3>\r\n                  <strong>Start now</strong>\r\n                </h3>\r\n                <p>\r\n                  <em>\r\n                    Expand your distribution channel and grow your business through thousands of trusted online stores.\r\n                  </em>\r\n                </p>\r\n                <button className=\"btn btn-primary\">register</button>\r\n              </div>\r\n              <div className=\"col-lg-4\">\r\n                <img className=\"device\" src=\"images/warehouse-truck.png\" width=\"240\" alt=\"warehouse-truck\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"newsletter-subscribe\">\r\n          <div className=\"container\">\r\n            <div>\r\n              <h2 className=\"text-center mb-4\">Subscribe for our Newsletter</h2>\r\n              <p className=\"text-center mb-4\">\r\n                Nunc luctus in metus eget fringilla. Aliquam sed justo ligula. Vestibulum nibh erat, pellentesque ut\r\n                laoreet vitae.\r\n              </p>\r\n            </div>\r\n            <form className=\"newsletter-form\">\r\n              <input className=\"\" type=\"email\" name=\"email\" placeholder=\"Your Email\" />\r\n              <button className=\"btn btn-primary\" type=\"submit\">\r\n                Subscribe\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"brands\">\r\n          <a href=\"/\">\r\n            {brands.map((brand) => {\r\n              return <img key={brand.id} src={brand.image} alt={`brand${brand.id}`} />;\r\n            })}\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Vendor;\r\n","D:\\React Project\\Ahmad\\website\\premafirm\\frontend\\src\\pages\\V_Reg\\index.js",["56","57","58"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./index.css\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\nimport {\r\n  mainContacts,\r\n  companyFields,\r\n  officeFields,\r\n  businessFields,\r\n  requireFields,\r\n  businessMarket,\r\n  businessFulfillment,\r\n  defaultOptions,\r\n  roleOptions,\r\n} from \"../../utils/vendorRegFormData\";\r\nimport axios from \"axios\";\r\nimport Geocode from \"react-geocode\";\r\n\r\nfunction VendorReg() {\r\n  const animatedComponents = makeAnimated();\r\n\r\n  useEffect(() => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(showPosition);\r\n      // Geocode.setApiKey(\"AIzaSyBptDAsJMkDkAfN6Z4poFTT7GcRrH6p_FU\");\r\n      // Geocode.setLanguage(\"en\");\r\n      // Geocode.setRegion(\"es\");\r\n      // Geocode.fromLatLng(\"37.09024\", \"-95.712891\").then(\r\n      //   (response) => {\r\n      //     const address = response.results[0].formatted_address;\r\n      //     console.log(address);\r\n      //   },\r\n      //   (error) => {\r\n      //     console.error(error);\r\n      //   }\r\n      // );\r\n    } else {\r\n      console.log(\"FAIL!!!\");\r\n    }\r\n  }, []);\r\n  //Get longitude and latitude using google api\r\n  const showPosition = (position) => {\r\n    let latitude = position.coords.latitude;\r\n    console.log(latitude);\r\n    let Longitude = position.coords.longitude;\r\n    console.log(Longitude);\r\n  };\r\n\r\n  // become a vendor\r\n  const [firstName, setFirstName] = useState();\r\n  const [lastName, setLastName] = useState();\r\n  const [email, setEmail] = useState();\r\n  const [phoneNumber, setPhoneNumber] = useState();\r\n  const [role, setRole] = useState();\r\n  const [isAuthorization, setIsAuthorization] = useState();\r\n  //company background\r\n  const [legalName, setLegalName] = useState();\r\n  const [websiteUrl, setWebsiteUrl] = useState();\r\n  const [privateLabel, setPrivateLabel] = useState();\r\n  const [stateOfFormation, setStateOfFormation] = useState();\r\n  // office detail\r\n  const [addr1, setAddr1] = useState();\r\n  const [addr2, setAddr2] = useState();\r\n  const [city, setCity] = useState();\r\n  const [province, setProvince] = useState();\r\n  const [zipcode, setZipcode] = useState();\r\n  const [country, setCountry] = useState();\r\n  // business detail\r\n  const [whichMarket, setWhichMarket] = useState();\r\n  const [fulfillmentCenter, setFulfillmentCenter] = useState();\r\n  const [productCount, setProductCount] = useState();\r\n  const [totalRevenue, setTotalRevenue] = useState();\r\n  const [onlineSelling, setOnlineSelling] = useState();\r\n  const [commercialProduct, setCommercialProduct] = useState();\r\n  const [sellerType, setSellerType] = useState();\r\n  const [howGetSite, setHowGetSite] = useState();\r\n  const [note, setNote] = useState();\r\n  // requirements\r\n  const [dropship, setDropship] = useState();\r\n  const [productInsurance, setProductInsurance] = useState();\r\n  const [productCate, setProductCate] = useState();\r\n  const [acceptReturn, setAcceptReturn] = useState();\r\n\r\n  const handleClickSave = async () => {\r\n    let vendorSaveData = {\r\n      first_name: firstName,\r\n      last_name: lastName,\r\n      email: email,\r\n      phone_number: phoneNumber,\r\n      role: role,\r\n      is_authorization: isAuthorization && isAuthorization.value,\r\n      company_legal_name: legalName,\r\n      website_url: websiteUrl,\r\n      private_label: privateLabel,\r\n      state_of_formation: stateOfFormation,\r\n      address_line1: addr1,\r\n      address_line2: addr2,\r\n      city: city,\r\n      state: province,\r\n      country: country,\r\n      zip_code: zipcode,\r\n      which_market: whichMarket,\r\n      sel_fulfillment_countries: fulfillmentCenter,\r\n      product_count: productCount,\r\n      annual_total_revenue: totalRevenue,\r\n      online_selling: onlineSelling,\r\n      commercial_product: commercialProduct,\r\n      seller_type: sellerType,\r\n      how_got_site: howGetSite,\r\n      note: note,\r\n      dropship: dropship && dropship.value,\r\n      product_liability_insurance: productInsurance && productInsurance.value,\r\n      product_categories: productCate,\r\n      accept_return: acceptReturn && acceptReturn.value,\r\n    };\r\n    // let vendorRegApiUrl = \"http://127.0.0.1:8000/api/vendor-register/viewset/vendors/\";\r\n    // try {\r\n    //   let response = await axios.post(vendorRegApiUrl, vendorSaveData);\r\n    //   console.log(response.data);\r\n    // } catch (error) {\r\n    //   console.log(error);\r\n    // }\r\n    window.location.href = \"/thankyou\";\r\n  };\r\n\r\n  const handleMainContactsChange = (value, id) => {\r\n    if (id === 1) {\r\n      setFirstName(value);\r\n    } else if (id === 2) {\r\n      setLastName(value);\r\n    } else if (id === 3) {\r\n      setEmail(value);\r\n    } else {\r\n      setPhoneNumber(value);\r\n    }\r\n  };\r\n\r\n  const handleCompanyChange = (value, id) => {\r\n    if (id === 1) {\r\n      setLegalName(value);\r\n    } else if (id === 2) {\r\n      setWebsiteUrl(value);\r\n    } else if (id === 3) {\r\n      setPrivateLabel(value);\r\n    } else {\r\n      setStateOfFormation(value);\r\n    }\r\n  };\r\n\r\n  const handleOfficeChange = (value, id) => {\r\n    if (id === 1) {\r\n      setCity(value);\r\n    } else if (id === 2) {\r\n      setProvince(value);\r\n    } else {\r\n      setZipcode(value);\r\n    }\r\n  };\r\n\r\n  const handleBusinessChange = (value, id) => {\r\n    if (id === 1) {\r\n      setProductCount(value);\r\n    } else if (id === 2) {\r\n      setTotalRevenue(value);\r\n    } else if (id === 3) {\r\n      setOnlineSelling(value);\r\n    } else if (id === 4) {\r\n      setCommercialProduct(value);\r\n    } else if (id === 5) {\r\n      setSellerType(value);\r\n    } else {\r\n      setHowGetSite(value);\r\n    }\r\n  };\r\n  const handleRequirementChange = (value, id) => {\r\n    if (id === 1) {\r\n      setDropship(value);\r\n    } else if (id === 2) {\r\n      setProductInsurance(value);\r\n    } else if (id === 3) {\r\n      setProductCate(value);\r\n    } else {\r\n      setAcceptReturn(value);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"vendor-register\">\r\n      <div className=\"container\">\r\n        <div className=\"vendor-reg-content\">\r\n          <h2>Become a Vendor</h2>\r\n          <p>Thank you for your interest to join our sales network</p>\r\n          <p>https://partners.wayfair.com/d/onboarding/registration</p>\r\n        </div>\r\n\r\n        <div className=\"main-contact\">\r\n          <div className=\"row\">\r\n            {mainContacts.map((mainContact) => {\r\n              return (\r\n                <div className=\"col-lg-6\" key={mainContact.id}>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor={`mainContact${mainContact.id}`}>{mainContact.label}</label>\r\n                    <input\r\n                      type={mainContact.type}\r\n                      className=\"form-control\"\r\n                      id={`mainContact${mainContact.id}`}\r\n                      onChange={(e) => handleMainContactsChange(e.target.value, mainContact.id)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className=\"row contact-role\">\r\n            <div className=\"col-lg-4\">\r\n              <label htmlFor=\"selectRole\">Your Role *</label>\r\n              <Select placeholder=\"Please Select an option\" options={roleOptions} onChange={(e) => setRole(e)} />\r\n            </div>\r\n            <div className=\"col-lg-8\">\r\n              <label htmlFor=\"selectLegal\">\r\n                Are you authorized to sign legal agreements on behalf of the company *\r\n              </label>\r\n              <Select\r\n                placeholder=\"Please select an answer\"\r\n                options={defaultOptions}\r\n                onChange={(e) => setIsAuthorization(e)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"register-company mt-4\">\r\n          <h2>Company</h2>\r\n          <p>\r\n            Please use the legal name and registered address for business operations. We'll keep your info confidential\r\n            and secure.\r\n          </p>\r\n\r\n          <h4>Company Background</h4>\r\n          <div className=\"row\">\r\n            {companyFields.map((companyField) => {\r\n              return (\r\n                <div className=\"col-lg-6\" key={companyField.id}>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor={`company${companyField.id}`}>{companyField.label}</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      id={`company${companyField.id}`}\r\n                      onChange={(e) => handleCompanyChange(e.target.value, companyField.id)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n\r\n          <h4>Office Details</h4>\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-6\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"officeAddress1\">Address Line 1 *</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"officeAddress1\"\r\n                  onChange={(e) => setAddr1(e.target.value)}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-6\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"officeAddress2\">Address Line 2</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"officeAddress2\"\r\n                  onChange={(e) => setAddr2(e.target.value)}\r\n                />\r\n              </div>\r\n            </div>\r\n            {officeFields.map((officeField) => {\r\n              if (officeField.countries) {\r\n                return (\r\n                  <div className=\"col-lg-3\" key={officeField.id}>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor={`office${officeField.id}`}>{officeField.label}</label>\r\n                      <Select placeholder=\"\" options={officeField.countries} onChange={(e) => setCountry(e)} />\r\n                    </div>\r\n                  </div>\r\n                );\r\n              } else {\r\n                return (\r\n                  <div className=\"col-lg-3\" key={officeField.id}>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor={`office${officeField.id}`}>{officeField.label}</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id={`office${officeField.id}`}\r\n                        onChange={(e) => handleOfficeChange(e.target.value, officeField.id)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                );\r\n              }\r\n            })}\r\n          </div>\r\n\r\n          <h4>Business Details</h4>\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-4\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"businessMarket\">In which markets do you sell? *</label>\r\n                <Select\r\n                  options={businessMarket}\r\n                  placeholder=\"Select countries\"\r\n                  closeMenuOnSelect={false}\r\n                  isMulti\r\n                  components={animatedComponents}\r\n                  onChange={(e) => setWhichMarket(e)}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-8\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"businessFulfillment\">\r\n                  Select all the Countries where you have fulfillment centers in *\r\n                </label>\r\n                <Select\r\n                  options={businessFulfillment}\r\n                  placeholder=\"Select countries\"\r\n                  closeMenuOnSelect={false}\r\n                  isMulti\r\n                  components={animatedComponents}\r\n                  onChange={(e) => setFulfillmentCenter(e)}\r\n                />\r\n              </div>\r\n            </div>\r\n            {businessFields.map((businessField) => {\r\n              if (businessField.isMulti === 1) {\r\n                return (\r\n                  <div className=\"col-lg-6\" key={businessField.id}>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor={`business${businessField.id}`}>{businessField.label}</label>\r\n                      <Select\r\n                        options={businessField.options}\r\n                        placeholder=\"Select an option\"\r\n                        closeMenuOnSelect={false}\r\n                        isMulti\r\n                        components={animatedComponents}\r\n                        onChange={(e) => handleBusinessChange(e, businessField.id)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                );\r\n              } else {\r\n                return (\r\n                  <div className=\"col-lg-6\" key={businessField.id}>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor={`business${businessField.id}`}>{businessField.label}</label>\r\n                      <Select\r\n                        options={businessField.options}\r\n                        placeholder=\"Select an option\"\r\n                        onChange={(e) => handleBusinessChange(e, businessField.id)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                );\r\n              }\r\n            })}\r\n            <div className=\"col-lg-12\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"businessNotes\">Notes</label>\r\n                <textarea\r\n                  className=\"form-control\"\r\n                  id=\"businessNotes\"\r\n                  rows=\"5\"\r\n                  onChange={(e) => setNote(e.target.value)}\r\n                ></textarea>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"requirement mt-4\">\r\n          <h2>Requirements</h2>\r\n          <p>In order to sell with us, you'll need drop shipping capability, and have product liability insurance.</p>\r\n          <div className=\"row\">\r\n            {requireFields.map((requireField) => {\r\n              if (requireField.categories) {\r\n                return (\r\n                  <div className=\"col-lg-6\" key={requireField.id}>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor={`require${requireField.id}`}>{requireField.label}</label>\r\n                      <Select\r\n                        placeholder={requireField.placeholder}\r\n                        closeMenuOnSelect={false}\r\n                        components={animatedComponents}\r\n                        // defaultValue={[options[4], options[5]]}\r\n                        isMulti\r\n                        options={requireField.categories}\r\n                        onChange={(e) => handleRequirementChange(e, requireField.id)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                );\r\n              } else {\r\n                return (\r\n                  <div className=\"col-lg-6\" key={requireField.id}>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor={`require${requireField.id}`}>{requireField.label}</label>\r\n                      <Select\r\n                        placeholder={requireField.placeholder}\r\n                        options={requireField.options}\r\n                        onChange={(e) => handleRequirementChange(e, requireField.id)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                );\r\n              }\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className=\"d-flex justify-content-end mt-5\">\r\n          <button type=\"button\" className=\"btn btn-primary mb-5 btn-company-register\" onClick={handleClickSave}>\r\n            SUBMIT\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VendorReg;\r\n","D:\\React Project\\Ahmad\\website\\premafirm\\frontend\\src\\utils\\vendorRegFormData.js",[],"D:\\React Project\\Ahmad\\website\\premafirm\\frontend\\src\\utils\\vendorPageData.js",[],"D:\\React Project\\Ahmad\\website\\premafirm\\frontend\\src\\pages\\ThankyouPage\\index.js",[],"D:\\React Project\\Ahmad\\website\\premafirm\\frontend\\src\\pages\\LoginPage\\index.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":1,"column":17,"nodeType":"65","messageId":"66","endLine":1,"endColumn":25},{"ruleId":"63","severity":1,"message":"67","line":3,"column":10,"nodeType":"65","messageId":"66","endLine":3,"endColumn":25},{"ruleId":"63","severity":1,"message":"68","line":4,"column":10,"nodeType":"65","messageId":"66","endLine":4,"endColumn":21},{"ruleId":"63","severity":1,"message":"69","line":12,"column":9,"nodeType":"65","messageId":"66","endLine":12,"endColumn":21},{"ruleId":"70","severity":1,"message":"71","line":31,"column":13,"nodeType":"72","endLine":31,"endColumn":104},{"ruleId":"63","severity":1,"message":"73","line":16,"column":8,"nodeType":"65","messageId":"66","endLine":16,"endColumn":13},{"ruleId":"63","severity":1,"message":"74","line":17,"column":8,"nodeType":"65","messageId":"66","endLine":17,"endColumn":15},{"ruleId":"63","severity":1,"message":"75","line":85,"column":9,"nodeType":"65","messageId":"66","endLine":85,"endColumn":23},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'FontAwesomeIcon' is defined but never used.","'faAngleDown' is defined but never used.","'handleScroll' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'axios' is defined but never used.","'Geocode' is defined but never used.","'vendorSaveData' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]